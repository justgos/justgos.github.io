(this["webpackJsonpjustgos.github.io"]=this["webpackJsonpjustgos.github.io"]||[]).push([[0],{45:function(e,t,a){e.exports=a(61)},50:function(e,t,a){},54:function(e,t,a){},61:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),o=a(16),i=a.n(o),l=(a(50),a(13)),s=a.n(l),c=a(17),u=a(3),d=a(1),m=a(7),v=a(33),f=a.n(v),p=(a(54),window.devicePixelRatio||1),g=a(39),h=a(20),x=Object(h.b)({swarmTargets:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"UPDATE_TARGET":return e[t.payload.target]=t.payload.data,e;case"REMOVE_TARGET":return delete e[t.payload.target],e;default:return e}},swarmState:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"UPDATE_STATE":return e=Object(g.a)({},e,{},t.payload);default:return e}}}),y=Object(h.c)(x);function b(e){return new Promise((function(t){return setTimeout(t,e)}))}var w={inProgress:[{id:"currently",name:"Currently..",desc:r.a.createElement("div",null,"Mapping out our skills in dancing with the biological machinery while building a new tool for thought"),links:[{label:"view graph",url:"https://graph.gos.garden/#z=1530.00/47.98/0.51"}],video:"/video/currently.mp4",previewType:"generative-thomas",previewSize:[400,400]}],archive:[{id:"indagatio-muris-senis",name:"Indagatio Muris Senis",desc:r.a.createElement("div",null,"Exploration of the Mus Musculus aging dynamics"),tech:["Python","TypeScript","WebGL"],links:[{label:"visualization",url:"https://gos.garden/vis-age/"},{label:"github",url:"https://github.com/justgos/indagatio-muris-senis"}],video:"/video/indagatio-muris-senis.mp4",previewType:"generative-thomas",previewSize:[400,400]},{id:"thingness",name:"Thingness",desc:r.a.createElement("div",null,"Exploration of cell-level morphogenesis in 2D"),tech:["Python"],links:[{label:"github",url:"https://github.com/justgos/thingness"}],video:"/video/thingness.mp4",previewType:"generative-thomas",previewSize:[400,400]},{id:"excog",name:"Extended Knowledge v1",desc:r.a.createElement("div",null,"A tool for thinking on scales larger/longer than mindmaps usually allow for.",r.a.createElement("br",null),"Augmented with ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Extended_cognition",target:"_blank",rel:"noopener noreferrer"},"Wikipedia")," data"),tech:["React","Canvas rendering","socket.io","Node.js","Mongo","Neo4j","ElasticSearch"],links:[{label:"video",url:"https://youtu.be/Pn0lUIH5Fy8"}],video:"/video/ex-k.mp4",previewType:"generative-excog",previewSize:[400,400]},{id:"eso",name:"EcoSystemOne",desc:r.a.createElement("div",null,"A platform where you learn by teaching others \u2014 by telling stories together, in\xa0VR"),tech:["Unity (Photon, SteamVR)","Node.js","Mongo","ElasticSearch","Python","AWS","Docker Swarm"],links:[{label:"website",url:"https://ecosystemone.com/"}],video:"/video/act.mp4",previewType:"content",previewSize:[400,400],previewScale:7},{id:"body-evo",name:"Mind-body evolution",desc:r.a.createElement("div",null,"Agents can evolve new limbs, which add new sensory and motor neurons.",r.a.createElement("br",null),"Mind is a Spiking Neural Network, implemented in ",r.a.createElement("a",{href:"https://brian2.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"},"brian2")," and using ",r.a.createElement("a",{href:"http://www.izhikevich.org/publications/spikes.htm",target:"_blank",rel:"noopener noreferrer"},"Izhikevich")," cells dynamics."),tech:["Python (Brian2)","Unity","ZeroMQ"],image:"/textures/body-evo-mind-structure.jpg",previewType:"generative-van-der-pol",previewSize:[400,400]},{id:"brave-gen",name:"Artificial worlds",desc:r.a.createElement("div",null,"Terrain generation and object placement are inspired by ",r.a.createElement("a",{href:"https://www.youtube.com/watch?v=SePDzis8HqY",target:"_blank",rel:"noopener noreferrer"},"No Man's Sky"),".",r.a.createElement("br",null),"Air dynamics are a voxel-based simulation, based on ",r.a.createElement("a",{href:"http://developer.download.nvidia.com/books/HTML/gpugems/gpugems_ch38.html",target:"_blank",rel:"noopener noreferrer"},"GPU Gems")," article."),tech:["Unity","Python"],links:[{label:"github",url:"https://github.com/justgos/brave-gen"}],video:"/video/brave-gen.mp4",previewType:"generative-van-der-pol",previewSize:[400,400]},{id:"l2mapper",name:"Map viewer for Lineage II",desc:r.a.createElement("div",null,"In a time of being somewhat obsessed with the game, spent a few weeks dawn till dusk trying to find ways to read an altered Unreal Engine data format and understanding how it's meant to be visualized."),tech:["C++","OpenGL"],links:[{label:"github",url:"https://github.com/justgos/l2mapper"}],image:"/textures/l2mapper.jpg",previewType:"content",previewSize:[500,379],previewScale:8}]};function T(e){var t=e.children,a=Object(m.f)(),o=a.size,i=o.width,l=o.height,s=a.camera,c=Object(n.useMemo)((function(){return[{value:0},{value:performance.now()},{value:performance.now()}]}),[]),v=Object(u.a)(c,3),f=v[0],g=v[1],h=v[2],x=Object(n.useRef)(),y=Object(n.useRef)();return Object(m.e)((function(){var e=performance.now();g.value=e,f.value++,e>h.value+1e3&&(h.value=e,f.value=0);s.position.x=i/2,s.position.y=-l/2,y.current.position.y=-0,x.current.position.y=Math.round(0*p)/p})),r.a.createElement("scene",{ref:x},r.a.createElement("ambientLight",{intensity:.5}),r.a.createElement("directionalLight",{intensity:.6,position:[0,0,1e3],rotation:new d.Euler(0,0,0),castShadow:!0,ref:y}),t)}var E=a(6),S=a(14),O=function(){function e(){Object(E.a)(this,e)}return Object(S.a)(e,null,[{key:"getDummyCanvas",value:function(){return e.dummyCanvas||(e.dummyCanvas=document.createElement("canvas"),e.dummyCanvas.width=e.dummyCanvas.height=1),e.dummyCanvas}},{key:"AwaitImageLoad",value:function(e,t){return new Promise((function(t,a){var n=new Image;n.onload=function(){return t(n)},n.onerror=a,n.src=e}))}},{key:"renderImage",value:function(){var t=Object(c.a)(s.a.mark((function t(a,n){var r,o,i,l;return s.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.AwaitImageLoad(a,n);case 2:return r=t.sent,(o=document.createElement("canvas")).className="html-render-container",document.body.appendChild(o),o.width=n[0]*p,o.height=n[1]*p,(i=o.getContext("2d")).scale(p,p),i.clearRect(0,0,o.width,o.height),i.drawImage(r,0,0,n[0],n[1]),l=i.getImageData(0,0,o.width,o.height).data,document.body.removeChild(o),t.abrupt("return",l);case 15:case"end":return t.stop()}}),t)})));return function(e,a){return t.apply(this,arguments)}}()}]),e}();var j=a(22),z=function(e,t,a){this.variables=[],this.currentTextureIndex=0;var n=new d.Scene,r=new d.Camera;r.position.z=1;var o={passThruTexture:{value:null}},i=c("uniform sampler2D passThruTexture;\n\nvoid main() {\n\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\n\tgl_FragColor = texture2D( passThruTexture, uv );\n\n}\n",o),l=new d.Mesh(new d.PlaneBufferGeometry(2,2),i);function s(a){a.defines.resolution="vec2( "+e.toFixed(1)+", "+t.toFixed(1)+" )"}function c(e,t){t=t||{};var a=new d.ShaderMaterial({uniforms:t,vertexShader:"void main()\t{\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n",fragmentShader:e});return s(a),a}n.add(l),this.addVariable=function(e,t,a){var n={name:e,initialValueTexture:a,material:this.createShaderMaterial(t),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:d.NearestFilter,magFilter:d.NearestFilter};return this.variables.push(n),n},this.setVariableDependencies=function(e,t){e.dependencies=t},this.init=function(){if(!a.extensions.get("OES_texture_float")&&!a.capabilities.isWebGL2)return"No OES_texture_float support for float textures.";if(0===a.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(var n=0;n<this.variables.length;n++){var r=this.variables[n];r.renderTargets[0]=this.createRenderTarget(e,t,r.wrapS,r.wrapT,r.minFilter,r.magFilter),r.renderTargets[1]=this.createRenderTarget(e,t,r.wrapS,r.wrapT,r.minFilter,r.magFilter),this.renderTexture(r.initialValueTexture,r.renderTargets[0]),this.renderTexture(r.initialValueTexture,r.renderTargets[1]);var o=r.material,i=o.uniforms;if(null!==r.dependencies)for(var l=0;l<r.dependencies.length;l++){var s=r.dependencies[l];if(s.name!==r.name){for(var c=!1,u=0;u<this.variables.length;u++)if(s.name===this.variables[u].name){c=!0;break}if(!c)return"Variable dependency not found. Variable="+r.name+", dependency="+s.name}i[s.name]={value:null},o.fragmentShader="\nuniform sampler2D "+s.name+";\n"+o.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){for(var e=this.currentTextureIndex,t=0===this.currentTextureIndex?1:0,a=0,n=this.variables.length;a<n;a++){var r=this.variables[a];if(null!==r.dependencies)for(var o=r.material.uniforms,i=0,l=r.dependencies.length;i<l;i++){var s=r.dependencies[i];o[s.name].value=s.renderTargets[e].texture}this.doRenderTarget(r.material,r.renderTargets[t])}this.currentTextureIndex=t},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.addResolutionDefine=s,this.createShaderMaterial=c,this.createRenderTarget=function(a,n,r,o,i,l){return a=a||e,n=n||t,r=r||d.ClampToEdgeWrapping,o=o||d.ClampToEdgeWrapping,i=i||d.NearestFilter,l=l||d.NearestFilter,new d.WebGLRenderTarget(a,n,{wrapS:r,wrapT:o,minFilter:i,magFilter:l,format:d.RGBAFormat,type:d.FloatType,stencilBuffer:!1,depthBuffer:!1})},this.createTexture=function(){var a=new Float32Array(e*t*4);return new d.DataTexture(a,e,t,d.RGBAFormat,d.FloatType)},this.renderTexture=function(e,t){o.passThruTexture.value=e,this.doRenderTarget(i,t),o.passThruTexture.value=null},this.doRenderTarget=function(e,t){var o=a.getRenderTarget();l.material=e,a.setRenderTarget(t),a.render(n,r),l.material=i,a.setRenderTarget(o)}},C=a(8),F=a(9),k=function(e){Object(C.a)(a,e);var t=Object(F.a)(a);function a(e){var n;return Object(E.a)(this,a),(n=t.call(this,{vertexShader:"\n        attribute vec2 reference;\n        varying vec4 vColor;\n        uniform float time;\n        uniform sampler2D positionTex;\n        uniform sampler2D colorTex;\n        uniform float pointScale;\n        uniform vec2 posOffset;\n        uniform int targetType;\n\n        vec2 unpack2HalfToRGBA(vec4 v) {\n          return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n        }\n\n        void main() {\n            // vColor.xyz = color;\n            // vColor.w = alpha;\n            vColor = texture2D(colorTex, reference);\n            // vColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n            if(targetType == 2) {\n              vColor.w = pow(abs(sin(time * 0.5 + reference.x * 10.0)), 2.0);\n            }\n\n            vec4 pos = texture2D(positionTex, reference);\n            pos.xy += posOffset;\n            pos.z = 0.0;\n            // vec2 pos1 = unpack2HalfToRGBA(texture2D(positionTex, reference.xy));\n            // vec2 pos2 = unpack2HalfToRGBA(texture2D(positionTex, reference.zw));\n            // vec4 pos = vec4(pos1.x, pos1.y, pos2.x, 1.0);\n            vec4 mvPosition = modelViewMatrix * vec4( pos.xyz, 1.0 );\n            gl_PointSize = pointScale;  //  * abs(texture2D(posTexture, vec2(position.x / 1000.0, 0.0)).x)\n            gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform sampler2D pointTexture;\n        varying vec4 vColor;\n        void main() {\n          // gl_FragColor = vec4( vColor, 1.0 );\n          gl_FragColor = vColor;\n          // gl_FragColor = vec4(1.0, 1.0, 1.0, vColor.w) * texture2D(pointTexture, gl_PointCoord);\n          gl_FragColor.w *= 0.3;\n        }\n      ",blending:d.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0})).uniforms={time:{value:e.time},targetType:{value:e.targetType},positionTex:{value:e.positionTex},colorTex:{value:e.colorTex},pointTexture:{value:e.pointTexture},pointScale:{value:e.pointScale},posOffset:{value:e.posOffset}},n}return a}(d.ShaderMaterial),D="\n  //\tSimplex 3D Noise \n  //\tby Ian McEwan, Ashima Arts\n  //\n  vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n  vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\n  float snoise(vec3 v){ \n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //  x0 = x0 - 0. + 0.0 * C \n    vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n    vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n    vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n    // Permutations\n    i = mod(i, 289.0 ); \n    vec4 p = permute( permute( permute( \n              i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n            + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients\n    // ( N*N points uniformly over a square, mapped onto an octahedron.)\n    float n_ = 1.0/7.0; // N=7\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    //Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                  dot(p2,x2), dot(p3,x3) ) );\n  }\n",M="\n  // precision highp float;\n  uniform float time;\n  uniform float delta;\n  uniform int targetType;\n\n  ".concat(D,"\n\n  float odeO3(float x, float y, float z, \n              float a1, float a2, float a3, float a4, float a5, \n              float a6, float a7, float a8, float a9, float a10, \n              float a11, float a12, float a13, float a14, float a15, \n              float a16, float a17, float a18, float a19, float a20) {\n    return a1*0.0 + a2*x + a3*x*x + a4*x*x*x + a5*x*x*y           + a6*x*x*z + a7*x*y + a8*x*y*y + a9*x*y*z + a10*x*z           + a11*x*z*z + a12*y + a13*y*y + a14*y*y*y + a15*y*y*z           + a16*y*z + a17*y*z*z + a18*z + a19*z*z + a20*z*z*z;\n  }\n\n  #define odeO3Full(x, y, z,                     a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,                      a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,                      a21, a22, a23, a24, a25, a26, a27, a28, a29, a30,                      a31, a32, a33, a34, a35, a36, a37, a38, a39, a40,                      a41, a42, a43, a44, a45, a46, a47, a48, a49, a50,                      a51, a52, a53, a54, a55, a56, a57, a58, a59, a60) vec3(     odeO3(x, y, z, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,            a11, a12, a13, a14, a15, a16, a17, a18, a19, a20),     odeO3(x, y, z, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30,            a31, a32, a33, a34, a35, a36, a37, a38, a39, a40),     odeO3(x, y, z, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50,            a51, a52, a53, a54, a55, a56, a57, a58, a59, a60)   )\n\n  #define rescale(scale)     scaleFactor = scale;     rescaled = (target - offset) * scaleFactor;     float x = rescaled.x;     float y = rescaled.y;     float z = rescaled.z;\n\n  void main()\t{\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    vec3 target = texture2D(targetPositionTex, uv).xyz;\n    // target.x += delta * 10.0;\n\n    float speed = 5.0;\n    float scaleFactor = 10.0;\n    vec3 offset = vec3(0.0, 0.0, 0.0);\n    vec3 rescaled = (target - offset) * scaleFactor;\n    float localTime = time + gl_FragCoord.x * 10.0 + gl_FragCoord.y * 25.0;\n\n    vec3 dtdt;\n\n    // // Sprott's D=3 O=3 flows\n    // dtdt = odeO3Full(rescaled.x, rescaled.y, rescaled.z,\n    //                   0.5, 0.0, -0.6, 0.2, -0.1, 0.2, -0.6, 0.8, -0.6, -0.4, -0.2, -0.2, -1.2, 0.4, 0.8, 0.1, 1.2, 1.2, 1.0, 0.3, 0.1, 0.4, 0.2, 0.3, 0.9, -0.4, 1.1, -0.1, -1.0, 0.2, 0.1, -1.2, 1.2, -0.6, -0.3, -0.4, 0.5, 0.2, 0.3, -0.7, 0.4, -1.1, -0.7, 0.0, 0.2, 0.5, -0.8, 0.4, -0.3, 0.2, 0.2, 0.8, -1.1, 1.1, -0.9, -0.4, 0.9, 0.2, -0.1, 1.2);\n\n    if(targetType == 1) {\n      // Thomas' cyclically symmetric attractor\n      // rescale(4.0);\n      float b = 0.208186;\n      dtdt.x = sin(rescaled.y) - b * rescaled.x;\n      dtdt.y = sin(rescaled.z) - b * rescaled.y;\n      dtdt.z = sin(rescaled.x) - b * rescaled.z;\n    } else if(targetType == 2) {\n      // Sprott's simplest chaotic flow, Case A\n      speed = 4.0;\n      rescale(1.0 / 120.0);\n      dtdt.x = rescaled.y;\n      dtdt.y = -rescaled.x + rescaled.y * rescaled.z;\n      dtdt.z = 1.0 - rescaled.y * rescaled.y;\n\n      // speed = 4.0;\n      // rescale(1.0 / 80.0);\n      // dtdt.x = y;\n      // dtdt.y = y*z - x;\n      // dtdt.z = 1.0 - y*y;\n    } else if(targetType == 3) {\n      // van der Pol oscillator\n      speed = 1.0;\n      rescale(4.0);\n      float A = 0.9;\n      float omega = 0.5;\n      float v = rescaled.y;\n      float dv = A * sin(omega * localTime) - (x*x - 1.0) * v - x;\n      dtdt.x = v;\n      dtdt.y = dv;\n    } else if(targetType == 4) {\n      // Custom - excog\n\n      // float maxInteractionDist = 0.01;\n      // for(float i=0.0; i<resolution.x; i++) {\n      //   for(float j=0.0; j<resolution.y; j++) {\n      //     vec3 otherTarget = texture2D(targetPositionTex, vec2(i, j) / resolution.xy).xyz;\n      //     if(abs(otherTarget.x - target.x) > maxInteractionDist\n      //       || abs(otherTarget.y - target.y) > maxInteractionDist)\n      //       continue;\n      //     dtdt.x -= otherTarget.x - target.x;\n      //     dtdt.y -= otherTarget.y - target.y;\n      //   }\n      // }\n\n      speed = 8.0;\n      rescale(5.0);\n      float rPhase = pow(abs(sin(time * 0.2 + gl_FragCoord.y / resolution.y * 0.2)), 2.0);\n      float r = 5.0 * rPhase + 0.1;\n      // gl_FragCoord.x / resolution.x * 2.0 * 3.14159\n      float a = atan(y, x) + 0.5 * pow(1.0 - rPhase, 2.0) * time * (gl_FragCoord.x / resolution.x + 0.01);\n\n      float noiseScale = 2.0;\n      vec3 noiseSource = vec3(x, y, z) * 1.0 + time * 0.2;\n      // vec3 noiseSource = vec3(1.0, 1.0, 1.0) * 1.0 + time * 0.2;\n      vec3 noiseV = vec3(\n        snoise(noiseSource + vec3(527.234, 65.34, 982.873)),\n        snoise(noiseSource + vec3(42.45, 22.644, 863.386)),\n        0\n      );\n      noiseV = vec3(\n        snoise(noiseSource + 0.5 * noiseV + vec3(35.642, 64.266, 3.656)),\n        snoise(noiseSource + 0.5 * noiseV + vec3(763.135, 7.2367, 62.8465)),\n        0\n      );\n      r += noiseV.x * 1.1;\n      // noiseV *= noiseScale;\n      noiseV *= 0.0;\n\n      dtdt.x += r * cos(a) - x + noiseV.x;\n      dtdt.y += r * sin(a) - y + noiseV.y;\n    }\n\n    vec3 newTarget = (rescaled + dtdt * delta * speed) / scaleFactor + offset;\n    \n    // Prevent pixel loss from chaotic blowups\n    if(abs(newTarget.x) > 10000.0 || abs(newTarget.y) > 10000.0 || abs(newTarget.z) > 10000.0)\n      newTarget = vec3(0.0, 0.0, 0.0);\n\n    gl_FragColor = vec4(newTarget, 1.0);\n}\n"),_="\n  // precision highp float;\n  uniform float time;\n  uniform float delta;\n  uniform vec2 targetScale;\n  uniform float velocityNoiseScale;\n  // uniform vec2 targetPositionOffset;\n  uniform vec2 dTargetOffset;\n\n  ".concat(D,"\n\n  void main()\t{\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    vec3 pos = texture2D(positionTex, uv).xyz;\n    pos.xy -= dTargetOffset;\n    vec3 target = texture2D(targetPositionTex, uv).xyz;\n    target.xy *= targetScale;\n    // target.xy += targetPositionOffset - dTargetOffset;\n    vec3 v = texture2D(velocityTex, uv).xyz;\n\n    vec3 goTargetV = 2.0 * (target-pos);\n\n    float noiseScale = 20.0 * (1.0 + 2.0 * pow(length(goTargetV), 0.5));\n    vec3 noiseSource = vec3(1.0, 1.0, 1.0) + pos * 1.0 + time * 1.0;\n    // noiseSource.x += uv.x * 1475.754;\n    // noiseSource.y += uv.y * 286.46247;\n    vec3 noiseV = vec3(\n      snoise(noiseSource + vec3(43.521, 65.254, 982.143)),\n      snoise(noiseSource + vec3(654.45, 22.644, 863.345)),\n      0\n    );\n    noiseV = vec3(\n      snoise(noiseSource + 0.5 * noiseV + vec3(35.642, 64.266, 3.656)),\n      snoise(noiseSource + 0.5 * noiseV + vec3(763.135, 7.2367, 62.8465)),\n      0\n    );\n    noiseV *= noiseScale * velocityNoiseScale;\n    // noiseV *= 0.0;\n    // vec3 noiseV = vec3(0.0, 0.0, 0.0);\n\n    float decay = 0.8;\n    // vec3 noiseSource = vec3(uv.x, uv.y, 0) * 1000.0 + time * 1.0;\n    vec3 newV = decay * v + (1.0-decay) * (goTargetV + noiseV);\n    // newV.z = 0.0;\n\n    gl_FragColor = vec4(newV, 1.0);\n}\n");function N(e){e.children;var t=e.position,a=16384,o=Object(m.f)(),i=o.gl,l=o.size,s=l.width,c=l.height,v=Object(n.useState)(null),f=Object(u.a)(v,2),g=f[0],h=f[1],x=Object(n.useState)(y.getState().swarmTargets),b=Object(u.a)(x,2),w=b[0],T=b[1];y.subscribe((function(){T(y.getState().swarmTargets)}));var E=Object(n.useMemo)((function(){for(var e=[],t=0;t<3*a;t+=3)e.push(Math.random()*s,Math.random()*-c,0);return new Float32Array(e)}),[a]),S=Object(n.useMemo)((function(){for(var e=[],t=0;t<2*a;t+=2)e.push(t/2%128/128,Math.floor(t/2/128)/128);return new Float32Array(e)}),[a]),O=function(e){for(var t=e.image.data,a=0;a<t.length;a+=4)t[a]=E[a/4*3],t[a+1]=E[a/4*3+1],t[a+2]=E[a/4*3+2]},C=function(e){for(var t=e.image.data,a=0;a<t.length;a+=4)t[a]=0,t[a+1]=0,t[a+2]=0,t[a+3]=1},F=Object(n.useMemo)((function(){var e=new z(128,128,i),t=e.createTexture(),a=e.createTexture(),n=e.createTexture();O(t),O(a),C(n);var r=e.createTexture(),o=e.createTexture();C(r),C(o);var l=e.addVariable("targetPositionTex",M,a);l.material.uniforms.time={value:0},l.material.uniforms.delta={value:0},l.material.uniforms.targetType={value:0},l.material.uniforms.targetPositionTex={value:a};var s=e.addVariable("velocityTex",_,n);s.material.uniforms.time={value:0},s.material.uniforms.delta={value:0},s.material.uniforms.targetPositionTex={value:a},s.material.uniforms.targetScale={value:[0,0]},s.material.uniforms.targetPositionOffset={value:[0,0]},s.material.uniforms.dTargetOffset={value:[0,0]},s.material.uniforms.velocityNoiseScale={value:0};var c=e.addVariable("positionTex","\n  // precision highp float;\n  uniform float delta;\n  uniform vec2 dTargetOffset;\n\n  void main()\t{\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    vec3 pos = texture2D(positionTex, uv).xyz;\n    pos.xy -= dTargetOffset;\n    vec3 v = texture2D(velocityTex, uv).xyz;\n\n    // const float minDelta = 0.5;\n    // vec3 dpos = v * min(2.0 * delta, 1.0) + (target-pos) * min(0.5 * delta, 1.0);\n    // if(pos.x != target.x && abs(dpos.x) < minDelta)\n    //   dpos.x = clamp(target.x - pos.x, -minDelta, minDelta);\n    // if(pos.y != target.y && abs(dpos.y) < minDelta)\n    //   dpos.y = clamp(target.y - pos.y, -minDelta, minDelta);\n\n    gl_FragColor = vec4(pos + v * min(delta, 1.0), 1.0);\n}\n",t);c.material.uniforms.delta={value:0},c.material.uniforms.dTargetOffset={value:[0,0]},e.setVariableDependencies(l,[l]),e.setVariableDependencies(s,[c,s,l]),e.setVariableDependencies(c,[c,s]);var u=e.addVariable("colorTex","\n  // precision highp float;\n  uniform float delta;\n  uniform sampler2D targetColorTex;\n\n  void main()\t{\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    vec4 color = texture2D(colorTex, uv);\n    vec4 target = texture2D(targetColorTex, uv);\n\n    const float minDelta = 0.1;\n    vec4 dcolor = (target-color) * min(0.5 * delta, 1.0);\n    // if(color.w != target.w && abs(dcolor.w) < minDelta)\n    //   dcolor.w = clamp(target.w - color.w, -minDelta, minDelta);\n\n    gl_FragColor = color + dcolor;\n}\n",r);u.material.uniforms.targetColorTex={value:o},u.material.uniforms.delta={value:0},e.setVariableDependencies(u,[u]);var d=e.init();return null!==d&&console.error(d),y.dispatch(function(e){return{type:"UPDATE_STATE",payload:{positionTex:e.positionTex}}}({positionTex:t})),[e,l,c,a,s,u,o]}),[]),D=Object(u.a)(F,7),N=D[0],R=D[1],V=D[2],P=D[3],A=D[4],I=D[5],G=D[6];Object(n.useEffect)((function(){if(g){if("content"===g.type&&g.positions.length>0){for(var e=P.image.data,t=0;t<e.length;t+=4)e[t]=g.positions[t/4*3%g.positions.length],e[t+1]=g.positions[(t/4*3+1)%g.positions.length],e[t+2]=g.positions[(t/4*3+2)%g.positions.length];P.needsUpdate=!0,e=G.image.data;for(var a=0;a<e.length;a+=4)e[a]=g.colors[a],e[a+1]=Math.random()<.95?g.colors[a+1]:0,e[a+2]=g.colors[a+2],e[a+3]=g.colors[a+3];G.needsUpdate=!0}else{for(var n=P.image.data,r=0;r<n.length;r+=4)n[r]=Math.random()-.5,n[r+1]=Math.random()-.5,n[r+2]=0;n=G.image.data;for(var o=0;o<n.length;o+=4)n[o]=0,n[o+1]=0,n[o+2]=0,n[o+3]=.4+.6*Math.random();G.needsUpdate=!0}N.renderTexture(P,N.getCurrentRenderTarget(R))}}),[g]);var B=Object(n.useMemo)((function(){var e=new d.TextureLoader;return[new k({pointTexture:e.load("/textures/box-shadow-16px.png"),posOffset:[0,0],time:0,targetType:0})]}),[]),U=Object(u.a)(B,1)[0],L=Object(n.useMemo)((function(){return[{value:performance.now()},{value:[0,0]}]}),[]),H=Object(u.a)(L,2),W=H[0],q=H[1];return Object(m.e)((function(){var e,t=performance.now(),a=Math.min((t-W.value)/1e3,.1);W.value=performance.now(),R.material.uniforms.time.value=t/1e3,R.material.uniforms.delta.value=a,A.material.uniforms.time.value=t/1e3,A.material.uniforms.delta.value=a,V.material.uniforms.delta.value=a,I.material.uniforms.delta.value=a,U.uniforms.time.value=t/1e3;for(var n=document.scrollingElement.scrollTop,r=[Math.max(document.documentElement.clientWidth,window.innerWidth||0),Math.max(document.documentElement.clientHeight,window.innerHeight||0)],o=0,i=Object.keys(w),l=0;l<i.length;l++){var s=document.getElementById(w[i[l]].id);if(s.offsetTop+s.offsetHeight>n&&s.offsetTop<n+r[1]){var c=Math.min(n+r[1],s.offsetTop+s.offsetHeight)-Math.max(n,s.offsetTop);s.offsetTop+s.offsetHeight>n+r[1]&&(c*=2),c>o&&(o=c,e=w[i[l]])}}if(e&&e!==g&&h(e),g){var u=document.getElementById(g.id),d=[u.offsetWidth,u.offsetHeight],m=[u.offsetLeft+d[0]/2,-u.offsetTop-d[1]/2],v=[m[0]-q.value[0],m[1]-q.value[1]];A.material.uniforms.dTargetOffset.value=v,A.material.uniforms.targetScale.value=d,V.material.uniforms.dTargetOffset.value=v,q.value=m;var f=0,x=1;switch(g.type){case"content":f=0;break;case"generative-thomas":f=1;break;case"generative-sprott":f=2;break;case"generative-van-der-pol":f=3;break;case"generative-excog":f=4,x=0;break;default:f=0}R.material.uniforms.targetType.value=f,A.material.uniforms.velocityNoiseScale.value=x,U.uniforms.targetType.value=f,U.uniforms.pointScale.value=g.scale/2*p,U.uniforms.posOffset.value=m}else A.material.uniforms.dTargetOffset.value=[0,0],V.material.uniforms.dTargetOffset.value=[0,0];N.compute(),U.uniforms.positionTex.value=N.getCurrentRenderTarget(V).texture,U.uniforms.colorTex.value=N.getCurrentRenderTarget(I).texture})),r.a.createElement(r.a.Fragment,null,r.a.createElement(j.a.points,{position:t,frustumCulled:!1},r.a.createElement("bufferGeometry",{attach:"geometry"},r.a.createElement("bufferAttribute",{attachObject:["attributes","position"],count:E.length/3,array:E,itemSize:3}),r.a.createElement("bufferAttribute",{attachObject:["attributes","reference"],count:S.length/2,array:S,itemSize:2})),r.a.createElement("shaderMaterial",{attach:"material",args:[U]})))}var R=a(30);function V(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=0,o=[],i=e.length-t;i>0;i-=t){var l=a?a[r++]/n*t:Math.floor(Math.random()*(i/t+1))*t;o.push(l);for(var s=0;s<t;s++){var c=[e[l+s],e[i+s]];e[i+s]=c[0],e[l+s]=c[1]}}return o}var P=Object(R.b)((function(e,t){return t.id in e.swarmTargets?{targetData:e.swarmTargets[t.id]}:{}}),(function(e){return{updateSwarmTarget:function(t,a){e(function(e,t){return{type:"UPDATE_TARGET",payload:{target:e,data:t}}}(t,a))},removeSwarmTarget:function(t){e(function(e){return{type:"REMOVE_TARGET",payload:{target:e}}}(t))}}}))((function(e){e.children;var t=e.id,a=e.size,o=e.image,i=e.targetData,l=e.updateSwarmTarget,u=e.removeSwarmTarget,d=e.type,m=void 0===d?"content":d,v=e.scale,f=void 0===v?4:v,g=Object(n.useRef)();return Object(n.useEffect)((function(){function e(){return(e=Object(c.a)(s.a.mark((function e(){var n,r,c,u,d,v,g;return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=[],r=[],(c=i)||(c={id:t}),c.type=m,c.scale=f,"content"!==m||"positions"in c){e.next=15;break}return e.next=9,O.renderImage(o,a);case 9:for(u=e.sent,d=0;d<u.length/4;d++)(v=[u[4*d],u[4*d+1],u[4*d+2],u[4*d+3]])[3]>0&&(n.push((d%(a[0]*p)/p+.25)/a[0]-.5,(-Math.floor(d/(a[0]*p))/p+.25)/a[1]+.5,0),r.push(v[0]/255,v[1]/255,v[2]/255,v[3]/255*(.4+.6*Math.random())));g=V(n,3),V(r,4,g,3),c.positions=n,c.colors=r;case 15:l(t,c);case 16:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return function(){e.apply(this,arguments)}(),function(){u(t)}}),[g,m,f]),r.a.createElement("div",{id:t,className:"swarm-target",ref:g},r.a.createElement("div",{style:{width:a[0]+"px",height:a[1]+"px"}}))}));function A(e){var t=e.project;return r.a.createElement("div",{id:t.id,className:"project",key:t.id},r.a.createElement("div",{className:"container"},r.a.createElement("div",{className:"project-name "+t.id},t.name),r.a.createElement("div",{className:"project-desc"},t.desc),t.tech&&r.a.createElement("div",{className:"project-tech"},r.a.createElement("span",{className:"tech-list"},t.tech.map((function(e,t){return r.a.createElement("div",{key:t,className:"item"},e)})))),t.links&&r.a.createElement("div",{className:"project-links"},t.links.map((function(e,t){return r.a.createElement("a",{key:t,href:e.url,target:"_blank",rel:"noopener noreferrer"},e.label)})))),r.a.createElement("div",{className:"container project-preview-media"},t.image&&r.a.createElement(r.a.Fragment,null,r.a.createElement("img",{src:t.image,alt:t.name+" preview"}),r.a.createElement("div",{className:"shadow"})),t.video&&r.a.createElement(r.a.Fragment,null,r.a.createElement("video",{autoPlay:!0,playsInline:!0,loop:!0,muted:!0,src:t.video}),r.a.createElement("div",{className:"shadow"}))))}a(62),a(60),a(29),a(28);var I=function(e){Object(C.a)(a,e);var t=Object(F.a)(a);function a(e){var n;return Object(E.a)(this,a),(n=t.call(this,{vertexShader:"\n        varying vec2 vUv;\n\n        void main() {\n          vUv = uv; \n          vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_Position = projectionMatrix * modelViewPosition;\n        }\n      ",fragmentShader:"\n        uniform sampler2D texture;\n        varying vec2 vUv;\n\n        void main() {\n          gl_FragColor = texture2D(texture, vUv);\n          // gl_FragColor.w = min(gl_FragColor.w, 0.999);\n        }\n      ",blendSrc:d.SrcAlphaFactor,blendDst:d.OneMinusSrcColorFactor,blending:d.CustomBlending,transparent:!0})).uniforms={texture:{value:e.texture}},n}return a}(d.ShaderMaterial);function G(e){var t=e.children,a=Object(n.useRef)(),o=Object(n.useRef)(),i=Object(n.useRef)(),l=Object(n.useRef)(),s=Object(n.useRef)(),c=Object(m.f)(),v=c.gl,f=(c.scene,c.camera),g=c.size,h=p,x={width:g.width*h,height:g.height*h},y=x.width,b=x.height,w=(Object(n.useRef)(),Object(n.useMemo)((function(){var e={format:d.RGBAFormat,type:d.UnsignedByteType,magFilter:d.NearestFilter,minFilter:d.NearestFilter,depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1};return[[new d.WebGLRenderTarget(y,b,e),new d.WebGLRenderTarget(y,b,e)],new d.OrthographicCamera(f.left,f.right,f.top,f.bottom,f.near,f.far)]}),[y,b])),E=Object(u.a)(w,2),S=E[0],O=E[1];Object(m.e)((function(){O.position.x=f.position.x,O.position.y=f.position.y,O.position.z=f.position.z,i.current.material.map=S[0].texture,v.setClearColor(new d.Color("#000"),0),v.setRenderTarget(S[1]),v.clear(),v.render(a.current,O);var e=[S[1],S[0]];S[0]=e[0],S[1]=e[1],s.current.material.map=S[0].texture,v.setRenderTarget(null),v.clear(),v.render(l.current,f)}),1);var j=Object(n.useMemo)((function(){return[new I({})]}),[]);Object(u.a)(j,1)[0];return r.a.createElement(r.a.Fragment,null,r.a.createElement("scene",{ref:a},r.a.createElement(T,null,r.a.createElement("mesh",{ref:i,frustumCulled:!1,position:[y/p/2,-b/p/2,-100]},r.a.createElement("planeBufferGeometry",{attach:"geometry",args:[y/p,b/p]}),r.a.createElement("meshBasicMaterial",{attach:"material",transparent:!0,opacity:.9})),r.a.createElement("group",{ref:o},t))),r.a.createElement("scene",{ref:l},r.a.createElement(T,null,r.a.createElement("mesh",{ref:s,frustumCulled:!1,position:[y/p/2,-b/p/2,-0]},r.a.createElement("planeBufferGeometry",{attach:"geometry",args:[y/p,b/p]}),r.a.createElement("meshStandardMaterial",{attach:"material",opacity:1})))))}var B=function(){var e=Object(n.useState)(!0),t=Object(u.a)(e,2),a=t[0],o=t[1],i=Object(n.useState)("content"),l=Object(u.a)(i,2),v=l[0],g=l[1],h=Object(n.useState)(2),x=Object(u.a)(h,2),y=x[0],T=x[1],E=Object(n.useState)(0),S=Object(u.a)(E,2),O=S[0],j=S[1];Object(n.useEffect)((function(){(function(){var e=Object(c.a)(s.a.mark((function e(){return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(window.location.hash.length<1)){e.next=15;break}return e.next=3,b(4e3);case 3:return j(1),e.next=6,b(2e3);case 6:return j(2),e.next=9,b(1500);case 9:return g("generative-excog"),T(2),e.next=13,b(1e3);case 13:e.next=18;break;case 15:j(2),T(2),g("generative-excog");case 18:o(!1);case 19:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}})()()}),[]);var z=Object(n.useState)(!0),C=Object(u.a)(z,2),F=C[0],k=C[1];return Object(n.useEffect)((function(){var e=function(e){e.target.documentElement.scrollTop>window.innerHeight?F&&(console.log("shouldRender false",F,!1),k(!1)):F||(console.log("shouldRender true",F,!0),k(!0))};return window.addEventListener("scroll",e),function(){return window.removeEventListener("scroll",e)}}),[F]),r.a.createElement("div",{className:"App"},r.a.createElement("div",{className:"main-canvas"},r.a.createElement(m.a,{id:"gl-canvas",camera:{fov:75,near:1,far:1e4,position:[0,0,1e3],rotation:new d.Euler(0,0,0)},orthographic:!0,pixelRatio:p,invalidateFrameloop:!F},r.a.createElement(G,null,r.a.createElement(N,{position:[0,0,0]})))),r.a.createElement("div",{className:"content"},r.a.createElement("div",{className:"hero"},r.a.createElement("div",{className:"welcome"},r.a.createElement(P,{id:"logo",type:v,size:[200,200],scale:y,image:"/textures/logo.png"}),r.a.createElement("div",{className:"welcome-line"+(O<1?" hidden":"")},"Hello, dear traveller"),r.a.createElement("div",{className:"welcome-line"+(O<2?" hidden":"")},"i'm GoS, and here's stuff i love and do")),r.a.createElement("div",{className:"proceed"+(a?" hidden":"")},r.a.createElement(f.a,{name:"caret-down"}))),r.a.createElement("div",{className:"delayed-content"+(a?" locked":"")},w.inProgress.map((function(e,t){return r.a.createElement(A,{key:t,project:e})})),r.a.createElement("div",{className:"container"},r.a.createElement("div",{className:"project-group-header"},"Archive")),w.archive.map((function(e,t){return r.a.createElement(A,{key:t,project:e})})),r.a.createElement("div",{className:"container"},r.a.createElement("div",{className:"footer"},r.a.createElement("a",{href:"https://twitter.com/just_gos",target:"_blank",rel:"noopener noreferrer"},r.a.createElement(f.a,{name:"twitter"})))))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(R.a,{store:y},r.a.createElement(B,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[45,1,2]]]);
//# sourceMappingURL=main.4545a482.chunk.js.map